{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\n// @Injectable({\n//   providedIn: 'root'\n// })\nexport class ApiService {\n  constructor(httpClient) {\n    this.httpClient = httpClient;\n    this.NODE_API_SERVER = 'http://localhost:3002/users';\n  }\n  createUser(user) {\n    return this.httpClient.post(`${this.NODE_API_SERVER}`, user);\n  }\n  readUsers() {\n    return this.httpClient.get(`${this.NODE_API_SERVER}`);\n  }\n  readUser(id) {\n    return this.httpClient.get(`${this.NODE_API_SERVER}/${id}`);\n  }\n  updateUser(id, user) {\n    return this.httpClient.put(`${this.NODE_API_SERVER}/${id}`, user);\n  }\n  deleteUser(id) {\n    return this.httpClient.delete(`${this.NODE_API_SERVER}/${id}`);\n  }\n}\nApiService.ɵfac = function ApiService_Factory(t) {\n  return new (t || ApiService)(i0.ɵɵinject(i1.HttpClient));\n};\nApiService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ApiService,\n  factory: ApiService.ɵfac\n});","map":{"version":3,"names":["ApiService","constructor","httpClient","NODE_API_SERVER","createUser","user","post","readUsers","get","readUser","id","updateUser","put","deleteUser","delete","i0","ɵɵinject","i1","HttpClient","factory","ɵfac"],"sources":["C:\\Users\\cosmi\\Desktop\\Java Script 2023\\Angular\\AngularCrud\\frontend\\src\\app\\api.service.ts"],"sourcesContent":["import { User } from './models/user';\nimport { Injectable } from '@angular/core';\n\n\nimport { Observable } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\n// @Injectable({\n//   providedIn: 'root'\n// })\n@Injectable()\nexport class ApiService {\n  NODE_API_SERVER = 'http://localhost:3002/users';\n  \n  constructor(private httpClient: HttpClient) {}\n\n  createUser(user: User): Observable<User>{\n    return this.httpClient.post<User>(`${this.NODE_API_SERVER}`, user);\n  }\n  readUsers(): Observable<User[]>{\n    return this.httpClient.get<User[]>(`${this.NODE_API_SERVER}`);\n  }\n  readUser(id:string): Observable<User[]>{\n    return this.httpClient.get<User[]>(`${this.NODE_API_SERVER}/${id}`);\n  }\n  updateUser(id:number,user: User){\n    return this.httpClient.put<User>(`${this.NODE_API_SERVER}/${id}`, user);\n  }\n  deleteUser(id: number){\n    return this.httpClient.delete<User>(`${this.NODE_API_SERVER}/${id}`);\n  }\n}"],"mappings":";;AAMA;AACA;AACA;AAEA,OAAM,MAAOA,UAAU;EAGrBC,YAAoBC,UAAsB;IAAtB,KAAAA,UAAU,GAAVA,UAAU;IAF9B,KAAAC,eAAe,GAAG,6BAA6B;EAEF;EAE7CC,UAAUA,CAACC,IAAU;IACnB,OAAO,IAAI,CAACH,UAAU,CAACI,IAAI,CAAO,GAAG,IAAI,CAACH,eAAe,EAAE,EAAEE,IAAI,CAAC;EACpE;EACAE,SAASA,CAAA;IACP,OAAO,IAAI,CAACL,UAAU,CAACM,GAAG,CAAS,GAAG,IAAI,CAACL,eAAe,EAAE,CAAC;EAC/D;EACAM,QAAQA,CAACC,EAAS;IAChB,OAAO,IAAI,CAACR,UAAU,CAACM,GAAG,CAAS,GAAG,IAAI,CAACL,eAAe,IAAIO,EAAE,EAAE,CAAC;EACrE;EACAC,UAAUA,CAACD,EAAS,EAACL,IAAU;IAC7B,OAAO,IAAI,CAACH,UAAU,CAACU,GAAG,CAAO,GAAG,IAAI,CAACT,eAAe,IAAIO,EAAE,EAAE,EAAEL,IAAI,CAAC;EACzE;EACAQ,UAAUA,CAACH,EAAU;IACnB,OAAO,IAAI,CAACR,UAAU,CAACY,MAAM,CAAO,GAAG,IAAI,CAACX,eAAe,IAAIO,EAAE,EAAE,CAAC;EACtE;;AAnBWV,UAAU,C;mBAAVA,UAAU,EAAAe,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;AAAVlB,UAAU,C;SAAVA,UAAU;EAAAmB,OAAA,EAAVnB,UAAU,CAAAoB;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}