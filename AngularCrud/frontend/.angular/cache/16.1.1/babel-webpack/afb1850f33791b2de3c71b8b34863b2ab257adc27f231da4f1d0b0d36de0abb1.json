{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../api.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nfunction AdminComponent_small_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\", 26);\n    i0.ɵɵtext(1, \"We'll never share your name with anyone else.\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AdminComponent_div_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"div\", 27);\n  }\n}\nfunction AdminComponent_div_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \" Acest camp este obligatoriu \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AdminComponent_div_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \" Acest camp trebuie sa fie de minim 3 caractere \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AdminComponent_div_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \" Acest camp trebuie sa fie de maxim 250 caractere \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AdminComponent_div_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \" Acest camp trebuie sa contina doar caractere si - \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AdminComponent_tr_58_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r11 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"td\")(10, \"button\", 28);\n    i0.ɵɵlistener(\"click\", function AdminComponent_tr_58_Template_button_click_10_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r11);\n      const user_r9 = restoredCtx.$implicit;\n      const ctx_r10 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r10.deleteUser(user_r9.id));\n    });\n    i0.ɵɵtext(11, \"Delete\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"button\", 29);\n    i0.ɵɵlistener(\"click\", function AdminComponent_tr_58_Template_button_click_12_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r11);\n      const user_r9 = restoredCtx.$implicit;\n      const ctx_r12 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r12.selectUser(user_r9));\n    });\n    i0.ɵɵtext(13, \"Update\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const user_r9 = ctx.$implicit;\n    i0.ɵɵattribute(\"id\", user_r9.id);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(user_r9.id);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(user_r9.nume);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(user_r9.prenume);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(user_r9.email);\n  }\n}\nexport let AdminComponent = /*#__PURE__*/(() => {\n  class AdminComponent {\n    constructor(apiService) {\n      this.apiService = apiService;\n      this.users = [];\n      this.selectedUser = {\n        id: 0,\n        nume: '',\n        prenume: '',\n        email: '',\n        datanasterii: new Date(),\n        telefon: ''\n      };\n    }\n    ngOnInit() {\n      this.readUsers();\n    }\n    readUsers() {\n      // read\n      this.apiService.readUsers().subscribe(users => {\n        this.users = users['users'];\n        console.log('am utilizatori', JSON.stringify(this.users));\n      });\n    }\n    createOrUpdateUser(form) {\n      if (this.selectedUser && this.selectedUser.id) {\n        this.apiService.updateUser(this.selectedUser.id, form.value).subscribe(user => {\n          console.log('User updated', user);\n        });\n      } else {\n        this.apiService.createUser(form.value).subscribe(user => {\n          this.readUsers();\n          console.log('User created, ', user);\n        });\n      }\n    }\n    selectUser(user) {\n      this.selectedUser = user;\n    }\n    deleteUser(id) {\n      this.apiService.deleteUser(id).subscribe(user => {\n        this.readUsers();\n      });\n    }\n  }\n  AdminComponent.ɵfac = function AdminComponent_Factory(t) {\n    return new (t || AdminComponent)(i0.ɵɵdirectiveInject(i1.ApiService));\n  };\n  AdminComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AdminComponent,\n    selectors: [[\"app-admin\"]],\n    decls: 59,\n    vars: 15,\n    consts: [[1, \"container\"], [\"novalidate\", \"\"], [\"f\", \"ngForm\"], [1, \"form-group\"], [\"for\", \"nume\"], [\"type\", \"text\", \"name\", \"nume\", \"id\", \"nume\", \"aria-describedby\", \"numeHelp\", \"placeholder\", \"nume\", \"required\", \"\", \"minlength\", \"3\", \"maxlength\", \"250\", \"pattern\", \"^[a-zA-Z-]+$\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"nume\", \"ngModel\"], [\"id\", \"numeHelp\", \"class\", \"form-text text-muted\", 4, \"ngIf\"], [\"class\", \"invalid-feedback\", 4, \"ngIf\"], [4, \"ngIf\"], [\"for\", \"exampleInputEmail1\"], [\"name\", \"prenume\", \"type\", \"text\", \"id\", \"prenume\", \"aria-describedby\", \"prenumeHealp\", \"required\", \"\", \"minlength\", \"1\", \"maxlength\", \"250\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"id\", \"prenumeHealp\", 1, \"form-text\", \"text-muted\"], [\"for\", \"email\"], [\"name\", \"email\", \"type\", \"email\", \"id\", \"email\", \"aria-describedby\", \"emailHealp\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"id\", \"emailHealp\", 1, \"form-text\", \"text-muted\"], [\"for\", \"telefon\"], [\"name\", \"telefon\", \"type\", \"text\", \"id\", \"telefon\", \"aria-describedby\", \"telefonHealp\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"id\", \"telefonHealp\", 1, \"form-text\", \"text-muted\"], [\"name\", \"datanastere\", \"type\", \"date\", \"id\", \"an\", \"aria-describedby\", \"anHealp\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"id\", \"anHealp\", 1, \"form-text\", \"text-muted\"], [\"name\", \"id\", \"type\", \"hidden\", \"id\", \"id\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", 3, \"click\"], [1, \"table\", \"table-striped\"], [\"scope\", \"col\"], [4, \"ngFor\", \"ngForOf\"], [\"id\", \"numeHelp\", 1, \"form-text\", \"text-muted\"], [1, \"invalid-feedback\"], [\"type\", \"button\", 1, \"btn\", \"btn-primary\", 3, \"click\"], [\"type\", \"button\", 1, \"btn\", \"btn-danger\", 3, \"click\"]],\n    template: function AdminComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        const _r13 = i0.ɵɵgetCurrentView();\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"h1\");\n        i0.ɵɵtext(2, \"Adaugare / Editare user\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"form\", 1, 2)(5, \"div\", 3)(6, \"label\", 4);\n        i0.ɵɵtext(7, \"Nume\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"input\", 5, 6);\n        i0.ɵɵlistener(\"ngModelChange\", function AdminComponent_Template_input_ngModelChange_8_listener($event) {\n          return ctx.selectedUser.nume = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(10, AdminComponent_small_10_Template, 2, 0, \"small\", 7);\n        i0.ɵɵtemplate(11, AdminComponent_div_11_Template, 1, 0, \"div\", 8);\n        i0.ɵɵtemplate(12, AdminComponent_div_12_Template, 2, 0, \"div\", 9);\n        i0.ɵɵtemplate(13, AdminComponent_div_13_Template, 2, 0, \"div\", 9);\n        i0.ɵɵtemplate(14, AdminComponent_div_14_Template, 2, 0, \"div\", 9);\n        i0.ɵɵtemplate(15, AdminComponent_div_15_Template, 2, 0, \"div\", 9);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(16, \"div\", 3)(17, \"label\", 10);\n        i0.ɵɵtext(18, \"Prenume\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(19, \"input\", 11);\n        i0.ɵɵlistener(\"ngModelChange\", function AdminComponent_Template_input_ngModelChange_19_listener($event) {\n          return ctx.selectedUser.prenume = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(20, \"small\", 12);\n        i0.ɵɵtext(21, \"Acest camp este obligatoriu\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(22, \"div\", 3)(23, \"label\", 13);\n        i0.ɵɵtext(24, \"Email\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(25, \"input\", 14);\n        i0.ɵɵlistener(\"ngModelChange\", function AdminComponent_Template_input_ngModelChange_25_listener($event) {\n          return ctx.selectedUser.email = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(26, \"small\", 15);\n        i0.ɵɵtext(27, \"Acest camp este obligatoriu\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(28, \"div\", 3)(29, \"label\", 16);\n        i0.ɵɵtext(30, \"Telefon\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(31, \"input\", 17);\n        i0.ɵɵlistener(\"ngModelChange\", function AdminComponent_Template_input_ngModelChange_31_listener($event) {\n          return ctx.selectedUser.telefon = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(32, \"small\", 18);\n        i0.ɵɵtext(33, \"Acest camp este obligatoriu\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(34, \"div\", 3)(35, \"label\", 10);\n        i0.ɵɵtext(36, \"An\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(37, \"input\", 19);\n        i0.ɵɵlistener(\"ngModelChange\", function AdminComponent_Template_input_ngModelChange_37_listener($event) {\n          return ctx.selectedUser.datanasterii = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(38, \"small\", 20);\n        i0.ɵɵtext(39, \"Format:2022-01-01\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(40, \"input\", 21);\n        i0.ɵɵlistener(\"ngModelChange\", function AdminComponent_Template_input_ngModelChange_40_listener($event) {\n          return ctx.selectedUser.id = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(41, \"br\");\n        i0.ɵɵelementStart(42, \"button\", 22);\n        i0.ɵɵlistener(\"click\", function AdminComponent_Template_button_click_42_listener() {\n          i0.ɵɵrestoreView(_r13);\n          const _r0 = i0.ɵɵreference(4);\n          return i0.ɵɵresetView(ctx.createOrUpdateUser(_r0));\n        });\n        i0.ɵɵtext(43, \"Create or Update User\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(44, \"table\", 23)(45, \"thead\")(46, \"tr\")(47, \"th\", 24);\n        i0.ɵɵtext(48, \"ID\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(49, \"th\", 24);\n        i0.ɵɵtext(50, \"Nume\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(51, \"th\", 24);\n        i0.ɵɵtext(52, \"Prenume\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(53, \"th\", 24);\n        i0.ɵɵtext(54, \"Email\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(55, \"th\", 24);\n        i0.ɵɵtext(56, \"Operatii\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(57, \"tbody\");\n        i0.ɵɵtemplate(58, AdminComponent_tr_58_Template, 14, 5, \"tr\", 25);\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        const _r1 = i0.ɵɵreference(9);\n        i0.ɵɵadvance(8);\n        i0.ɵɵclassProp(\"is-invalid\", _r1.invalid && (_r1.dirty || _r1.touched));\n        i0.ɵɵproperty(\"ngModel\", ctx.selectedUser.nume);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", _r1.valid);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", _r1.invalid && (_r1.dirty || _r1.touched));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", _r1.errors == null ? null : _r1.errors[\"required\"]);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", _r1.errors == null ? null : _r1.errors[\"minlength\"]);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", _r1.errors == null ? null : _r1.errors[\"maxlength\"]);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", _r1.errors == null ? null : _r1.errors[\"pattern\"]);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.selectedUser.prenume);\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngModel\", ctx.selectedUser.email);\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngModel\", ctx.selectedUser.telefon);\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngModel\", ctx.selectedUser.datanasterii);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngModel\", ctx.selectedUser.id);\n        i0.ɵɵadvance(18);\n        i0.ɵɵproperty(\"ngForOf\", ctx.users);\n      }\n    },\n    dependencies: [i2.NgForOf, i2.NgIf, i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.RequiredValidator, i3.MinLengthValidator, i3.MaxLengthValidator, i3.PatternValidator, i3.NgModel, i3.NgForm]\n  });\n  return AdminComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}